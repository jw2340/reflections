How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	It was helpful because I didn't have to read through the entire code of each file. 
	I only had to compare the lines that were different.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	It can be hepful for debugging new version by comparing the new versions with
	older versions. It can also make it easy for new programmers who join an existing
	project to track the history of a file.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The commits will make logical sense to the person committing. Manually committing
    requires more time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Multiple files might have overlapping information. For example, the pages
    in a website might have the same background. It makes sense to change all
    at once and to save the files in one commit.
    If files are not related to each other, then saving multiple files in one
    commit might not make sense.

How can you use the commands git log and git diff to view the history of files?

    Git log allows me to see all the commits made. I can see what changes were
    made, when, and by whom. Git diff allows me to see the differences in code
    between commits.

How might using version control make you more confident to make changes that
could break something?

    I would feel secure knowing that older versions are saved that I can go 
    back to if a change introduces a bug.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to take the Udacity Javascript course.